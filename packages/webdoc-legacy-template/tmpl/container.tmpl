<?js
    var self = this;
    var isGlobalPage;

    docs.forEach((doc, i) => {
      const currentDoc = doc;
      const memberList = currentDoc.members;
?>

<?js
    // we only need to check this once
    if (typeof isGlobalPage === 'undefined') {
        isGlobalPage = (doc.type === 'globalobj');
    }
?>
<?js if (doc.type === 'mainpage' || (doc.type === 'package')) { ?>
    <?js= self.partial('mainpage.tmpl', doc) ?>
<?js } else if (doc.type === 'source') { ?>
<?js } else { ?>

<section>

<header>
    <?js if (!doc.path || doc.type !== 'module') { ?>
        <h2>
            <?js if (doc.attribs) { ?><span class="attribs"><?js= doc.attribs ?></span><?js } ?>
            <?js= doc.path ?>
            <?js if (doc.variation) { ?>
                <sup class="variation"><?js= doc.variation ?></sup>
            <?js }
            if (doc.signature && !doc.hideconstructor) { ?>
                <?js= doc.signature ?><?js } ?>
        </h2>
        <?js if (doc.description) { ?>
            <div class="class-description"><?js= doc.description ?></div>
        <?js } ?>
        <?js } else if (doc.type === 'module' && doc.modules) { ?>
        <?js doc.modules.forEach(function(module) { ?>
            <?js if (module.classdesc) { ?>
                <div class="class-description"><?js= module.classdesc ?></div>
            <?js } ?>
        <?js }) ?>
    <?js } ?>
</header>

<article>
    <div class="container-overview">
        <?js if (doc.type === 'ModuleDoc' && doc.modules) { ?>
            <?js if (doc.description) { ?>
                <div class="description"><?js= doc.description ?></div>
            <?js } ?>

            <?js doc.modules.forEach(function(module) { ?>
                <?js= self.partial('method.tmpl', module) ?>
            <?js }) ?>
        <?js } else if (doc.type === "ClassDoc" || (doc.type === 'NSDoc' && doc.signature)) { ?>
            <?js= self.partial('method.tmpl', this.getConstructor(currentDoc) || doc) ?>
        <?js } else { ?>
            <?js if (doc.description) { ?>
                <div class="description"><?js= doc.description ?></div>
            <?js } ?>

            <?js= self.partial('details.tmpl', doc) ?>

            <?js if (doc.examples && doc.examples.length) { ?>
                <h3>Example<?js= doc.examples.length > 1? 's':'' ?></h3>
                <?js= self.partial('examples.tmpl', doc.examples) ?>
            <?js } ?>
        <?js } ?>
    </div>

    <?js if (doc.extends && doc.extends.length) { ?>
        <h3 class="subsection-title">Extends</h3>

        <?js= self.partial('augments.tmpl', doc.extends) ?>
    <?js } ?>

    <?js if (doc.requires && doc.requires.length) { ?>
        <h3 class="subsection-title">Requires</h3>

        <ul><?js doc.requires.forEach(function(r) { ?>
            <li><?js= self.linkto(r, r) ?></li>
        <?js }); ?></ul>
    <?js } ?>

    <?js
        const classes = this.getClasses(currentDoc);

        if (!isGlobalPage && classes && classes.length) {
    ?>
        <h3 class="subsection-title">Classes</h3>

        <dl><?js classes.forEach(function(c) { ?>
            <dt><?js= self.linkto(c.path, c.name) ?></dt>
            <dd><?js if (c.summary) { ?><?js= c.summary ?><?js } ?></dd>
        <?js }); ?></dl>
    <?js } ?>

    <?js
        const interfaces = this.getInterfaces(currentDoc);

        if (!isGlobalPage && interfaces && interfaces.length) {
    ?>
        <h3 class="subsection-title">Interfaces</h3>

        <dl><?js interfaces.forEach(function(i) { ?>
            <dt><?js= self.linkto(i.path, i.name) ?></dt>
            <dd><?js if (i.summary) { ?><?js= i.summary ?><?js } ?></dd>
        <?js }); ?></dl>
    <?js } ?>

    <?js
        const mixins = this.getMixins(currentDoc);

        if (!isGlobalPage && mixins && mixins.length) {
    ?>
        <h3 class="subsection-title">Mixins</h3>

        <dl><?js mixins.forEach(function(m) { ?>
            <dt><?js= self.linkto(m.path, m.name) ?></dt>
            <dd><?js if (m.summary) { ?><?js= m.summary ?><?js } ?></dd>
        <?js }); ?></dl>
    <?js } ?>

    <?js
        var namespaces = this.getNamespaces(currentDoc);

        if (!isGlobalPage && namespaces && namespaces.length) {
    ?>
        <h3 class="subsection-title">Namespaces</h3>

        <dl><?js namespaces.forEach(function(n) { ?>
            <dt><?js= self.linkto(n.path, n.name) ?></dt>
            <dd><?js if (n.summary) { ?><?js= n.summary ?><?js } ?></dd>
        <?js }); ?></dl>
    <?js } ?>

    <?js
        var members = this.getProperties(currentDoc);

        // symbols that are assigned to module.exports are not globals, even though they're not a memberof anything
        if (isGlobalPage && members && members.length && members.forEach) {
            members = members.filter(function(m) {
                return m.path && m.path.indexOf('module:') !== 0;
            });
        }
        if (members.length) {
    ?>
        <h3 class="subsection-title">Members</h3>

        <?js members.forEach(function(p) { ?>
            <?js= self.partial('members.tmpl', p) ?>
        <?js }); ?>
    <?js } ?>

    <?js
        const methods = this.getMethodLikes(currentDoc);

        if (methods && methods.length && methods.forEach) {
    ?>
        <h3 class="subsection-title">Methods</h3>

        <?js methods.forEach(function(m) { ?>
            <?js= self.partial('method.tmpl', m) ?>
        <?js }); ?>
    <?js } ?>

    <?js
        const typedefs = this.getTypedefs(currentDoc);

        if (typedefs.length) {
    ?>
        <h3 class="subsection-title">Type Definitions</h3>

        <?js typedefs.forEach(function(e) {
                if (e.signature) {
            ?>
                <?js= self.partial('method.tmpl', e) ?>
            <?js
                }
                else {
            ?>
                <?js= self.partial('members.tmpl', e) ?>
            <?js
                }
            }); ?>
    <?js } ?>

    <?js
        const enums = this.getEnums(currentDoc);

        if (enums.length) {
    ?>
        <h3 class="subsection-title">Enums</h3>

        <?js enums.forEach((enumDoc) => { ?>
            <?js= self.partial("doc/enum.tmpl", enumDoc) ?>
        <?js }); ?>
    <?js } ?>

    <?js
        const events = this.getEvents(currentDoc);

        if (events && events.length && events.forEach) {
    ?>
        <h3 class="subsection-title">Events</h3>

        <?js events.forEach(function(e) { ?>
            <?js= self.partial('method.tmpl', e) ?>
        <?js }); ?>
    <?js } ?>
</article>

</section>
<?js } ?>

<?js }); ?>
